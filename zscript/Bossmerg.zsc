// -------------------------------------------------------------------
// From a freak alternate universe in which Boss was not Ross but Moss
// -------------------------------------------------------------------
const HDLD_BOSSER="bas";

class Bossmerg:HDShotgun {
	default{
		weapon.selectionorder 32;
		weapon.slotnumber 3;
		weapon.slotpriority 0;
		weapon.bobrangex 0.28;
		weapon.bobrangey 1.1;
		scale 0.75;
		hdweapon.barrelsize 32,1,2;
		hdweapon.refid HDLD_BOSSER;
		tag "$TAG_BOSSMERG";
	}

	override string pickupmessage(){
		return "You got the "..gettag().."!";
	}

	override void loadoutconfigure(string input){
		int customchamber=getloadoutvar(input,"customchamber",1);
		if(!customchamber)weaponstatus[0]&=~BOSSERF_CUSTOMCHAMBER;
		else if(customchamber>0)weaponstatus[0]|=BOSSERF_CUSTOMCHAMBER;

		int altreticle=getloadoutvar(input,"altreticle",1);
		if(!altreticle)weaponstatus[0]&=~BOSSERF_ALTRETICLE;
		else if(altreticle>0)weaponstatus[0]|=BOSSERF_ALTRETICLE;

		int frontreticle=getloadoutvar(input,"frontreticle",1);
		if(!frontreticle)weaponstatus[0]&=~BOSSERF_FRONTRETICLE;
		else if(frontreticle>0)weaponstatus[0]|=BOSSERF_FRONTRETICLE;

		int zoom=getloadoutvar(input,"zoom",3);
		if(zoom>=0)weaponstatus[BOSSERS_ZOOM]=
			(weaponstatus[0]&BOSSERF_FRONTRETICLE)?
			clamp(zoom,20,40):
			clamp(zoom,6,70);
		int choke=min(getloadoutvar(input,"choke",1),9);
		if(choke>=0)weaponstatus[BOSSERS_CHOKE]=choke;
	}
	override string,double getpickupsprite(){return "BORP"..getpickupframe2().."0",1.;}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			sb.drawimage("SHL1A0",(-47,-10),basestatusbar.DI_SCREEN_CENTER_BOTTOM);
			sb.drawnum(hpl.countinv("HDShellAmmo"),-46,-8,
				basestatusbar.DI_SCREEN_CENTER_BOTTOM
			);
		}
		if(hdw.weaponstatus[BOSSERS_CHAMBER]>1){
			sb.drawrect(-24,-14,5,3);
			sb.drawrect(-18,-14,2,3);
		}
		else if(hdw.weaponstatus[BOSSERS_CHAMBER]>0){
			sb.drawrect(-18,-14,2,3);
		}
		sb.drawwepnum(hdw.weaponstatus[BOSSERS_MAG],hdw.weaponstatus[BOSSERS_TUBESIZE],posy:-7);
		for(int i=hdw.weaponstatus[SHOTS_SIDESADDLE];i>0;i--){
			sb.drawrect(-16-i*2,-5,1,3);
		}
	}
	override string gethelptext(){
		return
		WEPHELP_FIRE.."  Shoot (choke: "..weaponstatus[BOSSERS_CHOKE]..")\n"
		..WEPHELP_ALTFIRE.."  Work bolt\n"
		..WEPHELP_RELOAD.."  Reload (side saddles first)\n"
		..WEPHELP_ALTRELOAD.."  Reload (pockets only)\n"
		..WEPHELP_FIREMODE.."+"..WEPHELP_RELOAD.."  Load side saddles\n"
		..WEPHELP_ZOOM.."+"..WEPHELP_FIREMODE.."  Zoom\n"
		..WEPHELP_UNLOADUNLOAD..
		(weaponstatus[0]&BOSSERF_CUSTOMCHAMBER?"\nInstalled Upgrades: ":"")
		..(weaponstatus[0]&BOSSERF_CUSTOMCHAMBER?"\n- Customized Chamber":"")

		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=Screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-64+bob.y,32,76,
			sb.DI_SCREEN_CENTER
		);
		sb.drawimage(
			"bsfrntsit",bob*1.14,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP
		);
		sb.SetClipRect(cx,cy,cw,ch);

		sb.drawimage(
			"bsbaksit",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9
		);

		if(scopeview){
			int scaledwidth=89;
			int scaledyoffset=60;
			double degree=0.1*hdw.weaponstatus[BOSSERS_ZOOM];
			double deg=1/degree;
			int cx,cy,cw,ch;
			[cx,cy,cw,ch]=screen.GetClipRect();
			sb.SetClipRect(-44+bob.x,16+bob.y,scaledwidth,scaledwidth,
				sb.DI_SCREEN_CENTER
			);

			sb.fill(color(255,0,0,0),
				bob.x-44,scaledyoffset+bob.y-44,
				88,88,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
			);

			texman.setcameratotexture(hpc,"HDXCAM_BOSS",degree);
			let cam     = texman.CheckForTexture("HDXCAM_BOSS",TexMan.Type_Any);
			let reticle = texman.CheckForTexture("bossret1",TexMan.Type_Any);

			vector2 frontoffs=(0,scaledyoffset)+bob*3;

			double camSize  = texman.GetSize(cam);
			sb.DrawCircle(cam, frontoffs, 0.125,usePixelRatio:true);

			let reticleScale = camSize / texman.GetSize(reticle);
			if(hdw.weaponstatus[0]&BOSSERF_FRONTRETICLE){
				sb.DrawCircle(reticle, frontoffs, .5*reticleScale, bob*deg*5-bob, 1.6*deg);
			}else{
				sb.DrawCircle(reticle, (0,scaledyoffset)+bob, .5*reticleScale,uvScale:.5);
			}

			//let holeScale    = camSize / texman.GetSize(hole);
			//let hole    = texman.CheckForTexture("scophole",TexMan.Type_Any);
			//sb.DrawCircle(hole, (0, scaledyoffset) + bob, .5 * holeScale, bob * 5, 1.5);


			screen.SetClipRect(cx,cy,cw,ch);

			sb.drawimage(
				"bossscope",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
				scale:(1.24,1.24)
			);
			sb.drawstring(
				sb.mAmountFont,string.format("%.1f",degree),
				(6+bob.x,105+bob.y),sb.DI_SCREEN_CENTER|sb.DI_TEXT_ALIGN_RIGHT,
				Font.CR_BLACK
			);
			sb.drawstring(
				sb.mAmountFont,string.format("%i",hdw.weaponstatus[BOSSS_DROPADJUST]),
				(6+bob.x,9+bob.y),sb.DI_SCREEN_CENTER|sb.DI_TEXT_ALIGN_RIGHT,
				Font.CR_BLACK
			);
		}
		// the scope display is in 10ths of an arcminute.
		// one dot = 6 arcminutes.
	}
	override double gunmass(){
		int tube=weaponstatus[BOSSERS_MAG];
		return 10+tube*0.3+weaponstatus[SHOTS_SIDESADDLE]*0.08;
	}
	override double weaponbulk(){
		return 115+(weaponstatus[SHOTS_SIDESADDLE]+weaponstatus[BOSSERS_MAG])*ENC_SHELLLOADED;
	}
	int jamchance(){
		if(weaponstatus[0]&BOSSERF_CUSTOMCHAMBER)return 1;
		else return 5;
	}
	int loadedrounds(){
		return weaponstatus[BOSSERS_MAG] + ((weaponstatus[BOSSERS_CHAMBER]>1)?1:0);
	}
	int magsize(){
		return 3;
	}
	action void A_CheckPocketSaddles(){
		if(invoker.weaponstatus[SHOTS_SIDESADDLE]<1)invoker.weaponstatus[0]|=BOSSERF_FROMPOCKETS;
		if(!countinv("HDShellAmmo"))invoker.weaponstatus[0]&=~BOSSERF_FROMPOCKETS;
	}
	action bool A_LoadTubeFromHand(){
		int hand=invoker.handshells;
		if(
			!hand
			||(
				invoker.weaponstatus[BOSSERS_CHAMBER]>0
				&&invoker.weaponstatus[BOSSERS_MAG]>=invoker.magsize()
			)
		){
			EmptyHand();
			return false;
		}
		if (invoker.weaponstatus[BOSSERS_MAG]>=invoker.magsize()) invoker.weaponstatus[BOSSERS_CHAMBER]=2;
		else invoker.weaponstatus[BOSSERS_MAG]++;
		invoker.handshells--;
		A_StartSound("weapons/huntreload",CHAN_WEAPON);
		return true;
	}
	action bool A_GrabShells(int maxhand=3,bool settics=false,bool alwaysone=false){
		if(maxhand>0)EmptyHand();else maxhand=abs(maxhand);
		bool fromsidesaddles=!(invoker.weaponstatus[0]&BOSSERF_FROMPOCKETS);
		int toload=min(
			fromsidesaddles?invoker.weaponstatus[SHOTS_SIDESADDLE]:countinv("HDShellAmmo"),
			alwaysone?1:(invoker.magsize()+1-invoker.loadedrounds()),
			max(1,health/22),
			maxhand
		);
		if(toload<1)return false;
		invoker.handshells=toload;
		if(fromsidesaddles){
			invoker.weaponstatus[SHOTS_SIDESADDLE]-=toload;
			if(settics)A_SetTics(2);
			A_StartSound("weapons/pocket",CHAN_WEAPON,8);
			A_MuzzleClimb(
				frandom(0.1,0.15),frandom(0.05,0.08),
				frandom(0.1,0.15),frandom(0.05,0.08)
			);
		}else{
			A_TakeInventory("HDShellAmmo",toload,TIF_NOTAKEINFINITE);
			if(settics)A_SetTics(7);
			A_StartSound("weapons/pocket",CHAN_WEAPON);
			A_MuzzleClimb(
				frandom(0.1,0.15),frandom(0.2,0.4),
				frandom(0.2,0.25),frandom(0.3,0.4),
				frandom(0.1,0.35),frandom(0.3,0.4),
				frandom(0.1,0.15),frandom(0.2,0.4)
			);
		}
		return true;
	}
	static void Fire(actor caller){
		double shotpower=getshotpower();
		double spread=1.5;
		double speedfactor=1.4;
		let bbb=Bossmerg(caller.findinventory("Bossmerg"));
		if(bbb){
			int choke=bbb.weaponstatus[BOSSERS_CHOKE];
			spread=6.5-0.5*choke;
			speedfactor=1.1+0.02857*choke;
			bbb.shotpower=shotpower;
		}
		spread*=shotpower;
		speedfactor*=shotpower;
		HDBulletActor.FireBullet(caller,"HDB_wad");
		let p=HDBulletActor.FireBullet(caller,"HDB_00",
			spread:spread,speedfactor:speedfactor,amount:10
		);
		distantnoise.make(p,"world/shotgunfar");
	}
	double shotpowervariation;
	states{
	select0:
		BORG A 0;
		goto select0big;
	deselect0:
		BORG A 0;
		goto deselect0big;
	ready:
		BORG A 1{
			if(pressingzoom()){
				if(invoker.weaponstatus[0]&BOSSERF_FRONTRETICLE)A_ZoomAdjust(BOSSERS_ZOOM,20,40);
				else A_ZoomAdjust(BOSSERS_ZOOM,6,70);
				A_WeaponReady(WRF_NONE);
			}else A_WeaponReady(WRF_ALL);
		}goto readyend;
	firemode:
	firemodehold:
		---- A 1{
			if(pressingreload()){
				setweaponstate("reloadss");
			}else A_WeaponReady(WRF_NONE);
		}
		---- A 0 A_JumpIf(pressingfiremode()&&invoker.weaponstatus[SHOTS_SIDESADDLE]<12,"firemodehold");
		goto nope;
	fire:
		BORG A 1 A_JumpIf(invoker.weaponstatus[BOSSERS_CHAMBER]==2,"shoot");
		goto ready;
	shoot:
		BORG A 1{
			A_Gunflash();
			invoker.weaponstatus[BOSSERS_CHAMBER]=1;
			A_StartSound("weapons/hunter",CHAN_WEAPON);
			A_AlertMonsters();

			/*actor p=spawn("HDBullet00bolt",pos+(0,0,height-6),ALLOW_REPLACE);
			p.target=self;p.angle=angle;p.pitch=pitch;
			p.vel+=(
				frandom(-1.,1.),frandom(-1.,1.),frandom(-1.,1.)
			);
			invoker.shotpowervariation=frandom(-10.,10.);
			p.speed+=invoker.shotpowervariation;
			p.vel+=self.vel;*/
			invoker.Fire(self);

			A_MuzzleClimb(0,0,randompick(-1,1)*1.8,-4.2,randompick(-1,1)*invoker.shotpower,-0.3*invoker.shotpower);
		}
		BORG F 1;
		BORG F 1 A_JumpIf(gunbraced(),"ready");
		goto ready;
	flash:
		BORG G 1 bright{
			A_Light2();
			HDFlashAlpha(-32);
		}
		TNT1 A 1 A_ZoomRecoil(0.87);
		TNT1 A 0 A_Light0();
		stop;
	altfire:
		BORG A 1 offset(0,34)A_WeaponBusy();
		BORG B 1 offset(2,36);
		BORG B 1 offset(4,38){
			if(invoker.weaponstatus[BOSSERS_CHAMBER]>2)setweaponstate("jamderp");
		}
		BORG B 1 offset(0,34);
		BORG B 0 A_JumpIf(invoker.weaponstatus[BOSSERS_RELOADING], "chamber");
		BORG B 0 A_Refire("chamber");
		goto ready;
	althold:
		BORG E 1 A_WeaponReady(WRF_NONE);
		BORG E 1{
			A_ClearRefire();
			if((pressingreload() || invoker.weaponstatus[BOSSERS_RELOADING]==1)
				&& (countinv("HDShellAmmo") || invoker.weaponstatus[SHOTS_SIDESADDLE])){
				invoker.weaponstatus[0]&=~BOSSERF_FROMPOCKETS;
				return resolvestate("loadchamber");
			}
			else if ((pressingaltreload() || invoker.weaponstatus[BOSSERS_RELOADING]==2)
				&& countinv("HDShellAmmo")){
				invoker.weaponstatus[0]|=BOSSERF_FROMPOCKETS;
				return resolvestate("loadchamber");
			}
			else if ((pressingunload() || invoker.weaponstatus[BOSSERS_RELOADING]==3) && invoker.loadedrounds()) {
				return resolvestate("unloadchamber");
			}
			else if(pressingaltfire())return resolvestate("althold");
			return resolvestate("altholdend");
		}
	altholdend:
		BORG E 0 {
			A_StartSound("weapons/boltfwd",CHAN_WEAPON);
			if (!invoker.weaponstatus[BOSSERS_CHAMBER] && invoker.weaponstatus[BOSSERS_MAG]>0) {
				invoker.weaponstatus[BOSSERS_MAG]--;
				invoker.weaponstatus[BOSSERS_CHAMBER] = 2;
			}
			EmptyHand(careful:true);
		}
		BORG DCB 2 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	unloadchamber:
		BORG E 1 A_ClearRefire();
		BORG E 1 offset(3,38);
		BORG E 1 offset(5,42);
		BORG E 1 offset(8,48) A_StartSound("weapons/pocket",CHAN_WEAPON);
		BORG E 1 offset(9,52) A_MuzzleClimb(frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2);
		BORG E 2 offset(8,60);
		BORG E 2 offset(7,72);
	unloadchamber2:
		BORG E 1 offset(7,74) {invoker.weaponstatus[BOSSERS_RELOADING]=0;}
		BORG E 1 offset(7,76);
		BORG E 1 offset(7,78);
	unloadtube:
		BORG E 6 offset(7,80) EmptyHand(careful:true);
	unloadloop:
		BORG E 8 offset(8,81) {
			if(!invoker.loadedrounds())setweaponstate("reloadend");
			else if(invoker.handshells>=3)setweaponstate("unloadloopend");
			else{
				invoker.handshells++;
				if (invoker.weaponstatus[BOSSERS_CHAMBER]) invoker.weaponstatus[BOSSERS_CHAMBER] = 0;
				else invoker.weaponstatus[BOSSERS_MAG]--;
			}
		}
		BORG E 4 offset(7,80) A_StartSound("weapons/huntreload",CHAN_WEAPON);
		loop;
	unloadloopend:
		BORG E 6 offset(8,81);
		BORG E 3 offset(8,82){
			int rmm=HDPickup.MaxGive(self,"HDShellAmmo",ENC_SHELL);
			if(rmm>0){
				A_StartSound("weapons/pocket");
				A_SetTics(8);
				HDF.Give(self,"HDShellAmmo",min(rmm,invoker.handshells));
				invoker.handshells=max(invoker.handshells-rmm,0);
			}
		}
		TNT1 A 0 EmptyHand(careful:true);
		BORG E 6 offset(7,72) A_Jumpif(!pressingunload(),"reloadend");
		goto unloadloop;
	loadchamber:
		BORG E 1 {
			A_ClearRefire();
			if(
				invoker.weaponstatus[BOSSERS_MAG]>=invoker.magsize()
				&&invoker.weaponstatus[BOSSERS_CHAMBER]
			){
				invoker.weaponstatus[BOSSERS_RELOADING]=0;
				setweaponstate("althold");
			}
		}
		BORG E 1 offset(3,38);
		BORG E 1 offset(5,42);
		BORG E 1 offset(8,48) A_StartSound("weapons/pocket",CHAN_WEAPON);
		BORG E 1 offset(9,52) A_MuzzleClimb(frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2);
		BORG E 2 offset(8,60);
		BORG E 2 offset(7,72);
	reloadstarthand:
		BORG E 1 offset(7,76);
		BORG E 1 offset(7,78);
		BORG E 2 offset(7,76);
		BORG E 2 offset(7,74);
		BORG E 3 offset(7,76);
		BORG E 3 offset(7,80) A_CheckPocketSaddles();
		TNT1 A 0 A_JumpIf(invoker.weaponstatus[0]&BOSSERF_FROMPOCKETS,"reloadpocket");
	reloadfast:
		BORG E 4 offset(7,80) A_GrabShells(3,false);
		BORG E 3 offset(7,82);
		BORG E 3 offset(7,81);
		goto reloadashell;
	reloadpocket:
		BORG E 4 offset(7,79) A_GrabShells(3,false);
		BORG E 6 offset(7,80) A_JumpIf(health>40,1);
		BORG E 4 offset(7,80) A_StartSound("weapons/pocket",CHAN_WEAPON);
		BORG E 8 offset(7,82) A_StartSound("weapons/pocket",CHAN_WEAPON);
		BORG E 6 offset(7,81) A_StartSound("weapons/pocket",CHAN_WEAPON);
		BORG E 6 offset(7,80);
		goto reloadashell;
	reloadashell:
		BORG E 1 offset(7,76) A_StartSound("weapons/huntreload",CHAN_WEAPON);
		BORG E 1 offset(7,76) {invoker.weaponstatus[BOSSERS_RELOADING]=0;}
		BORG E 4 offset(7,74) A_LoadTubeFromHand();
		BORG EEEEEE 1 offset(7,73){
			if(
				PressingReload()
				||PressingAltReload()
				||PressingUnload()
				||PressingFire()
				||PressingAltfire()
				||PressingZoom()
				||PressingFiremode()
			)invoker.weaponstatus[0]|=BOSSERF_HOLDING;
			else invoker.weaponstatus[0]&=~BOSSERF_HOLDING;
			if(
				invoker.loadedrounds()>=invoker.magsize()+1
				||(
					invoker.handshells<1&&(
						invoker.weaponstatus[0]&BOSSERF_FROMPOCKETS
						||invoker.weaponstatus[SHOTS_SIDESADDLE]<1
					)&&
					!countinv("HDShellAmmo")
				)
			)setweaponstate("reloadend");
			else if(
				!pressingaltreload()
				&&!pressingreload()
			)setweaponstate("reloadend");
			else if(invoker.handshells<1)setweaponstate("reloadstarthand");
		}goto reloadashell;
	reloadend:
		BORG E 2 offset(7,72); 
		BORG E 2 offset(8,66) EmptyHand(careful:true);
		BORG E 2 offset(8,60);
		BORG E 1 offset(7,52);
		BORG E 1 offset(5,42);
		BORG E 1 offset(3,38);
		BORG E 1 offset(3,35);
		goto althold;
	jam:
		BORG A 0{
			int chm=invoker.weaponstatus[BOSSERS_CHAMBER];
			if(chm<1)setweaponstate("chamber");
			else if(chm<3)invoker.weaponstatus[BOSSERS_CHAMBER]+=2;
		}
	jamderp:
		BORG A 0 A_StartSound("weapons/rifleclick",CHAN_WEAPON);
		BORG D 1 offset(4,38);
		BORG D 2 offset(2,36);
		BORG D 2 offset(4,38)A_MuzzleClimb(frandom(-0.5,0.6),frandom(-0.3,0.6));
		BORG D 3 offset(2,36){
			A_MuzzleClimb(frandom(-0.5,0.6),frandom(-0.3,0.6));
			if(random(0,invoker.jamchance())<12){
				setweaponstate("chamber");
				if(invoker.weaponstatus[BOSSERS_CHAMBER]>2)  
					invoker.weaponstatus[BOSSERS_CHAMBER]-=2;
			}
			if (!(pressingreload() || pressingunload() || pressingaltreload()))
				invoker.weaponstatus[BOSSERS_RELOADING]=0;
		}
		BORG D 2 offset(4,38);
		BORG D 3 offset(2,36);
		BORG A 0 A_Refire("jamderp");
		goto ready;
	chamber:
		BORG C 2 offset(4,38){
			if(
				random(0,2)
				&&invoker.weaponstatus[BOSSERS_CHAMBER]>2
			){
				invoker.weaponstatus[BOSSERS_CHAMBER]+=2;
				A_MuzzleClimb(
					-frandom(0.6,2.3),-frandom(0.6,2.3),
					-frandom(0.6,1.3),-frandom(0.6,1.3),
					-frandom(0.6,1.3),-frandom(0.6,1.3)
				);
				setweaponstate("jamderp");
			}else A_StartSound("weapons/boltback",CHAN_WEAPON);
		}
		BORG D 1 offset(6,42);
		BORG D 1 offset(6,42){
			if(gunbraced())A_MuzzleClimb(
				frandom(-0.1,0.3),frandom(-0.1,0.3)
			);else A_MuzzleClimb(
				frandom(-0.2,0.8),frandom(-0.4,0.8)
			);
			int jamch=invoker.jamchance();
			if(hd_debug)A_Log("choke: "..invoker.weaponstatus[BOSSERS_CHOKE]);
			if(random(0,100)<jamch)setweaponstate("jam");
		}
		BORG D 2 offset(6,42){
			//eject
			int chm=invoker.weaponstatus[BOSSERS_CHAMBER];
			if(chm>1){  
				A_SpawnItemEx(
					"HDFumblingShell",cos(pitch)*8,1,height-7-sin(pitch)*8,
					cos(pitch)*cos(angle-80)*4+vel.x,
					cos(pitch)*sin(angle-80)*4+vel.y,
					-sin(pitch)*4+vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			}else if(chm==1){
				A_SpawnItemEx(
					"HDSpentShell",cos(pitch)*8,1,height-7-sin(pitch)*8,
					cos(pitch)*cos(angle-80)*6+vel.x,
					cos(pitch)*sin(angle-80)*6+vel.y,
					-sin(pitch)*6+vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			}
			invoker.weaponstatus[BOSSERS_CHAMBER]=0;
		}
		BORG E 1 offset(6,42) A_WeaponReady(WRF_NOFIRE);
		BORG E 0 A_JumpIf(invoker.weaponstatus[BOSSERS_RELOADING], "althold");
		BORG E 0 A_Refire("althold");
		goto altholdend;
	reloadSS:
		BORG A 1 offset(1,34);
		BORG A 2 offset(2,34);
		BORG A 3 offset(3,36);
	reloadSSrestart:
		BORG A 6 offset(3,35);
		BORG A 9 offset(4,34);
		BORG A 4 offset(3,34){
			int hnd=min(
				countinv("HDShellAmmo"),
				12-invoker.weaponstatus[SHOTS_SIDESADDLE],
				max(1,health/22),
				3
			);
			if(hnd<1)setweaponstate("reloadSSend");
			else{
				A_TakeInventory("HDShellAmmo",hnd);
				invoker.weaponstatus[SHOTS_SIDESADDLE]+=hnd;
				A_StartSound("weapons/pocket",CHAN_WEAPON);
			}
		}
		BORG A 0 {
			if(
				!PressingReload()
				&&!PressingAltReload()
			)setweaponstate("reloadSSend");
			else if(
				invoker.weaponstatus[SHOTS_SIDESADDLE]<12
				&&countinv("HDShellAmmo")
			)setweaponstate("ReloadSSrestart");
		}
	reloadSSend:
		BORG A 3 offset(2,34);
		BORG A 1 offset(1,34) EmptyHand(careful:true);
		goto nope;
	altreload:
	reloadfrompockets:
		BORG A 0{
			int ppp=countinv("HDShellAmmo");
			if(ppp<1)setweaponstate("nope");
			else { 
				invoker.weaponstatus[0]|=BOSSERF_FROMPOCKETS;
				if (invoker.loadedrounds() >= invoker.magsize()+1) {
					if (invoker.weaponstatus[SHOTS_SIDESADDLE]<12) setweaponstate("reloadss");
					else setweaponstate("nope");
				}
				else invoker.weaponstatus[BOSSERS_RELOADING]=2;
			}
		}goto carefulbolt;
	reload:
	reloadfromsidesaddles:
		BORG A 0{
			int sss=invoker.weaponstatus[SHOTS_SIDESADDLE];
			int ppp=countinv("HDShellAmmo");
			if(ppp<1&&sss<1)setweaponstate("nope");
			else {
				if (invoker.loadedrounds() >= invoker.magsize()+1) {
					if (invoker.weaponstatus[SHOTS_SIDESADDLE]<12) setweaponstate("reloadss");
					else setweaponstate("nope");
				}
				else if(sss<1) {
					invoker.weaponstatus[0]|=BOSSERF_FROMPOCKETS;
					invoker.weaponstatus[BOSSERS_RELOADING]=2;
				}
				else{
					invoker.weaponstatus[0]&=~BOSSERF_FROMPOCKETS;	
					invoker.weaponstatus[BOSSERS_RELOADING]=1;
				}
			}
		}goto carefulbolt;
	unloadSS:
		BORG A 2 offset(1,34) A_JumpIf(invoker.weaponstatus[SHOTS_SIDESADDLE]<1,"nope");
		BORG A 1 offset(2,34);
		BORG A 1 offset(3,36);
	unloadSSLoop1:
		BORG A 4 offset(4,36);
		BORG A 2 offset(5,37) A_UnloadSideSaddle();
		BORG A 3 offset(4,36){	//decide whether to loop
			if(
				PressingReload()
				||PressingFire()
				||PressingAltfire()
				||invoker.weaponstatus[SHOTS_SIDESADDLE]<1
			)setweaponstate("unloadSSend");
		}goto unloadSSLoop1;
	unloadSSend:
		BORG A 3 offset(4,35);
		BORG A 2 offset(3,35);
		BORG A 1 offset(2,34);
		BORG A 1 offset(1,34);
		goto nope;
	unload:
		BORG A 1 {
			if(
				invoker.weaponstatus[SHOTS_SIDESADDLE]>0
				&&!(player.cmd.buttons&BT_USE)
			)setweaponstate("unloadSS");
			else if(
				!invoker.loadedrounds()
			)setweaponstate("nope");
			else invoker.weaponstatus[BOSSERS_RELOADING]=3;
		}
		goto carefulbolt;
	carefulbolt:
		BORG A 0 A_JumpIf(invoker.weaponstatus[BOSSERS_CHAMBER] > 2, "altfire");
		BORG A 0 A_JumpIf(invoker.weaponstatus[BOSSERS_CHAMBER] == 2, 1);
		goto altfire;
		BORG A 1;
		BORG A 1 offset(3,38);
		BORG A 1 offset(5,42);
		BORG A 1 offset(8,48) A_StartSound("weapons/pocket",CHAN_WEAPON);
		BORG A 1 offset(9,52) A_MuzzleClimb(frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2);
		BORG A 2 offset(8,60);
		BORG A 2 offset(7,72);
		BORG A 2 offset(7,74);
		BORG A 1 offset(9,76);
		BORG A 1 offset(11,78);
		BORG A 1 offset(7,74);
		BORG A 2 offset(11,78);
		BORG A 6 offset(13,82);
		BORG E 2 offset(11,78) A_StartSound("weapons/boltback",CHAN_WEAPON);
		BORG E 2 offset(9,76);
		BORG E 2 offset(7,74);
		BORG E 2 offset(7,72);
		TNT1 A 0 A_JumpIf(invoker.weaponstatus[BOSSERS_RELOADING] == 3, "unloadchamber2");
		goto reloadstarthand;
	spawn:
		BORP HIJKLMNABCDEFG -1 nodelay{
			int ssh=invoker.weaponstatus[SHOTS_SIDESADDLE];
			if(ssh>=11)frame=0;
			else if(ssh>=9)frame=1;
			else if(ssh>=7)frame=2;
			else if(ssh>=5)frame=3;
			else if(ssh>=3)frame=4;
			else if(ssh>=1)frame=5;
			else frame=6;
		}
	}
	override void InitializeWepStats(bool idfa){
		weaponspecial = 1337; //UaS sling compatbility
		if(!idfa && !owner){
			if(randompick(0,0,1))weaponstatus[0]|=BOSSERF_FRONTRETICLE;
			if(randompick(0,0,1))weaponstatus[0]|=BOSSERF_ALTRETICLE;
			weaponstatus[BOSSERS_ZOOM]=30;
			weaponstatus[BOSSERS_CHOKE]=9;
		}
		handshells=0;
		weaponstatus[BOSSERS_CHAMBER]=2;
		weaponstatus[BOSSERS_MAG]=magsize();
		weaponstatus[SHOTS_SIDESADDLE]=12;
		weaponstatus[BOSSERS_TUBESIZE]=3;
	}
	clearscope string getpickupframe2(){
		int ssh=weaponstatus[SHOTS_SIDESADDLE];
			if(ssh>=11)return "H";
			if(ssh>=9)return "I";
			if(ssh>=7)return "J";
			if(ssh>=5)return "K";
			if(ssh>=3)return "L";
			if(ssh>=1)return "M";
			return "N";
	}
}

enum bosserstatus{
	BOSSERF_UNLOADONLY=1,
	BOSSERF_FROMPOCKETS=2,
	BOSSERF_FRONTRETICLE=4,
	BOSSERF_ALTRETICLE=8,
	BOSSERF_HOLDING=16,
	BOSSERF_CUSTOMCHAMBER=3,

	BOSSERS_ZOOM=1,
	BOSSERS_CHAMBER=2,
	//3 is for side saddles
	BOSSERS_MAG=4,
	BOSSERS_HAND=5,
	BOSSERS_RELOADING=6, //0 - nope, 1 - reload, 2 - alt.reload, 3-unload
	BOSSERS_CHOKE=7,

	BOSSERS_TUBESIZE=5,
};